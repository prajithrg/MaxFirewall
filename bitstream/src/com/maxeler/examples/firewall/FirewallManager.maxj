package com.maxeler.examples.firewall;


import com.maxeler.maxcompiler.v2.kernelcompiler.KernelConfiguration;
import com.maxeler.maxcompiler.v2.managers.BuildConfig;
import com.maxeler.maxcompiler.v2.managers.custom.ManagerClock;
import com.maxeler.maxcompiler.v2.managers.custom.blocks.KernelBlock;
import com.maxeler.maxcompiler.v2.managers.custom.stdlib.DebugLevel;
import com.maxeler.networking.v1.managers.NetworkManager;
import com.maxeler.networking.v1.managers.netlib.Max4NetworkConnection;
import com.maxeler.networking.v1.managers.netlib.UDPChecksumMode;
import com.maxeler.networking.v1.managers.netlib.UDPConnectionMode;
import com.maxeler.networking.v1.managers.netlib.UDPStream;


public class FirewallManager extends NetworkManager {

	public FirewallManager(final FirewallEngineParameters params) {
		super(params.getEngineParams());

		debug.setDebugLevel(new DebugLevel().setHasStreamStatus(params.hasStreamStatus()));

		final UDPStream frames = addUDPStream("udpTopPort1", Max4NetworkConnection.QSFP_TOP_10G_PORT1, UDPConnectionMode.OneToOne, UDPChecksumMode.DropBadFrames);

		final ManagerClock netClk = getNetworkClock(Max4NetworkConnection.QSFP_TOP_10G_PORT1);
		pushDefaultClock(netClk);

		final KernelConfiguration myKernelConfig = new KernelConfiguration(getCurrentKernelConfig());
		final KernelBlock kernel = addKernel(new FirewallKernel(makeKernelParameters("exampleKernel", myKernelConfig)));
		kernel.getInput(FirewallKernel.INPUT_UDP) <== frames.getReceiveStream();
		frames.getTransmitStream() <== kernel.getOutput(FirewallKernel.OUTPUT_UDP);
		addFramedStreamToCPU("toCPU", FirewallKernel.outputLinkType) <== kernel.getOutput(FirewallKernel.OUTPUT_VALUES);
	}

	public static void main(final String[] args) {
		final FirewallEngineParameters params = new FirewallEngineParameters(args);
		final FirewallManager manager = new FirewallManager(params);

		final BuildConfig buildConfig = manager.getBuildConfig();
		buildConfig.setMPPRCostTableSearchRange(params.getMPPRStartCT(), params.getMPPREndCT());
		buildConfig.setMPPRParallelism(params.getMPPRThreads());
		buildConfig.setMPPRRetryNearMissesThreshold(params.getMPPRRetryThreshold());

		manager.build();
	}

}
